namespace DarkCanvas.ProceduralTerrain
{
    //================================================================================
    //
    // The Transvoxel Algorithm look-up tables
    //
    // Copyright 2009 by Eric Lengyel
    //
    // The following data originates from Eric Lengyel's Transvoxel Algorithm.
    // http://transvoxel.org/
    //
    // The data in this file may be freely used in implementations of the Transvoxel
    // Algorithm. If you do use this data, or any transformation of it, in your own
    // projects, commercial or otherwise, please give credit by indicating in your
    // source code that the data is part of the author's implementation of the
    // Transvoxel Algorithm and that it came from the web address given above.
    // (Simply copying and pasting the two lines of the previous paragraph would be
    // perfect.) If you distribute a commercial product with source code included,
    // then the credit in the source code is required.
    //
    // If you distribute any kind of product that uses this data, a credit visible to
    // the end-user would be appreciated, but it is not required. However, you may
    // not claim that the entire implementation of the Transvoxel Algorithm is your
    // own if you use the data in this file or any transformation of it.
    //
    // The format of the data in this file is described in the dissertation "Voxel-
    // Based Terrain for Real-Time Virtual Simulations", available at the web page
    // given above. References to sections and figures below pertain to that paper.
    //
    // The contents of this file are protected by copyright and may not be publicly
    // reproduced without permission.
    //
    //================================================================================
    public static class Transvoxel
    {
        // The RegularCellData structure holds information about the triangulation
        // used for a single equivalence class in the modified Marching Cubes algorithm,
        // described in Section 3.2.
        public class RegularCellData
        {
            public byte geometryCounts; // High nibble is vertex count, low nibble is triangle count.
            public byte[] vertexIndex;   // Groups of 3 indexes giving the triangulation.

            public RegularCellData(byte geometryCounts, byte[] vertexIndex)
            {
                this.geometryCounts = geometryCounts;
                this.vertexIndex = vertexIndex;
            }

            public long GetVertexCount()
            {
                return (geometryCounts >> 4);
            }

            public long GetTriangleCount()
            {
                return (geometryCounts & 0x0F);
            }
        }

        // The TransitionCellData structure holds information about the triangulation
        // used for a single equivalence class in the Transvoxel Algorithm transition cell,
        // described in Section 4.3.

        public class TransitionCellData
        {
            private long geometryCounts; // High nibble is vertex count, low nibble is triangle count.
            private byte[] vertexIndex = new byte[36]; // Groups of 3 indexes giving the triangulation.

            private long GetVertexCount()
            {
                return (geometryCounts >> 4);
            }

            private long GetTriangleCount()
            {
                return (geometryCounts & 0x0F);
            }
        }

        // The regularCellClass table maps an 8-bit regular Marching Cubes case index to
        // an equivalence class index. Even though there are 18 equivalence classes in our
        // modified Marching Cubes algorithm, a couple of them use the same exact triangulations,
        // just with different vertex locations. We combined those classes for this table so
        // that the class index ranges from 0 to 15.
        public static byte[] regularCellClass = new byte[256]
        {
            0x00, 0x01, 0x01, 0x03, 0x01, 0x03, 0x02, 0x04, 0x01, 0x02, 0x03, 0x04, 0x03, 0x04, 0x04, 0x03,
            0x01, 0x03, 0x02, 0x04, 0x02, 0x04, 0x06, 0x0C, 0x02, 0x05, 0x05, 0x0B, 0x05, 0x0A, 0x07, 0x04,
            0x01, 0x02, 0x03, 0x04, 0x02, 0x05, 0x05, 0x0A, 0x02, 0x06, 0x04, 0x0C, 0x05, 0x07, 0x0B, 0x04,
            0x03, 0x04, 0x04, 0x03, 0x05, 0x0B, 0x07, 0x04, 0x05, 0x07, 0x0A, 0x04, 0x08, 0x0E, 0x0E, 0x03,
            0x01, 0x02, 0x02, 0x05, 0x03, 0x04, 0x05, 0x0B, 0x02, 0x06, 0x05, 0x07, 0x04, 0x0C, 0x0A, 0x04,
            0x03, 0x04, 0x05, 0x0A, 0x04, 0x03, 0x07, 0x04, 0x05, 0x07, 0x08, 0x0E, 0x0B, 0x04, 0x0E, 0x03,
            0x02, 0x06, 0x05, 0x07, 0x05, 0x07, 0x08, 0x0E, 0x06, 0x09, 0x07, 0x0F, 0x07, 0x0F, 0x0E, 0x0D,
            0x04, 0x0C, 0x0B, 0x04, 0x0A, 0x04, 0x0E, 0x03, 0x07, 0x0F, 0x0E, 0x0D, 0x0E, 0x0D, 0x02, 0x01,
            0x01, 0x02, 0x02, 0x05, 0x02, 0x05, 0x06, 0x07, 0x03, 0x05, 0x04, 0x0A, 0x04, 0x0B, 0x0C, 0x04,
            0x02, 0x05, 0x06, 0x07, 0x06, 0x07, 0x09, 0x0F, 0x05, 0x08, 0x07, 0x0E, 0x07, 0x0E, 0x0F, 0x0D,
            0x03, 0x05, 0x04, 0x0B, 0x05, 0x08, 0x07, 0x0E, 0x04, 0x07, 0x03, 0x04, 0x0A, 0x0E, 0x04, 0x03,
            0x04, 0x0A, 0x0C, 0x04, 0x07, 0x0E, 0x0F, 0x0D, 0x0B, 0x0E, 0x04, 0x03, 0x0E, 0x02, 0x0D, 0x01,
            0x03, 0x05, 0x05, 0x08, 0x04, 0x0A, 0x07, 0x0E, 0x04, 0x07, 0x0B, 0x0E, 0x03, 0x04, 0x04, 0x03,
            0x04, 0x0B, 0x07, 0x0E, 0x0C, 0x04, 0x0F, 0x0D, 0x0A, 0x0E, 0x0E, 0x02, 0x04, 0x03, 0x0D, 0x01,
            0x04, 0x07, 0x0A, 0x0E, 0x0B, 0x0E, 0x0E, 0x02, 0x0C, 0x0F, 0x04, 0x0D, 0x04, 0x0D, 0x03, 0x01,
            0x03, 0x04, 0x04, 0x03, 0x04, 0x03, 0x0D, 0x01, 0x04, 0x0D, 0x03, 0x01, 0x03, 0x01, 0x01, 0x00
        };

        // The regularCellData table holds the triangulation data for all 16 distinct classes to
        // which a case can be mapped by the regularCellClass table.

        public static RegularCellData[] regularCellData = new RegularCellData[16]
        {
            new RegularCellData(0x00, new byte[] {}),
            new RegularCellData(0x31, new byte[] {0, 1, 2}),
            new RegularCellData(0x62, new byte[] {0, 1, 2, 3, 4, 5}),
            new RegularCellData(0x42, new byte[] {0, 1, 2, 0, 2, 3}),
            new RegularCellData(0x53, new byte[] {0, 1, 4, 1, 3, 4, 1, 2, 3}),
            new RegularCellData(0x73, new byte[] {0, 1, 2, 0, 2, 3, 4, 5, 6}),
            new RegularCellData(0x93, new byte[] {0, 1, 2, 3, 4, 5, 6, 7, 8}),
            new RegularCellData(0x84, new byte[] {0, 1, 4, 1, 3, 4, 1, 2, 3, 5, 6, 7}),
            new RegularCellData(0x84, new byte[] {0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7}),
            new RegularCellData(0xC4, new byte[] {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}),
            new RegularCellData(0x64, new byte[] {0, 4, 5, 0, 1, 4, 1, 3, 4, 1, 2, 3}),
            new RegularCellData(0x64, new byte[] {0, 5, 4, 0, 4, 1, 1, 4, 3, 1, 3, 2}),
            new RegularCellData(0x64, new byte[] {0, 4, 5, 0, 3, 4, 0, 1, 3, 1, 2, 3}),
            new RegularCellData(0x64, new byte[] {0, 1, 2, 0, 2, 3, 0, 3, 4, 0, 4, 5}),
            new RegularCellData(0x75, new byte[] {0, 1, 2, 0, 2, 3, 0, 3, 4, 0, 4, 5, 0, 5, 6}),
            new RegularCellData(0x95, new byte[] {0, 4, 5, 0, 3, 4, 0, 1, 3, 1, 2, 3, 6, 7, 8})
        };

        // The regularVertexData table gives the vertex locations for every one of the 256 possible
        // cases in the modified Marching Cubes algorithm. Each 16-bit value also provides information
        // about whether a vertex can be reused from a neighboring cell. See Section 3.3 for details.
        // The low byte contains the indexes for the two endpoints of the edge on which the vertex lies,
        // as numbered in Figure 3.7. The high byte contains the vertex reuse data shown in Figure 3.8.

        public static ushort[][] regularVertexData = new ushort[][]
        {
            new ushort[]{},
            new ushort[]{0x6201, 0x5102, 0x3304},
            new ushort[]{0x6201, 0x2315, 0x4113},
            new ushort[]{0x5102, 0x3304, 0x2315, 0x4113},
            new ushort[]{0x5102, 0x4223, 0x1326},
            new ushort[]{0x3304, 0x6201, 0x4223, 0x1326},
            new ushort[]{0x6201, 0x2315, 0x4113, 0x5102, 0x4223, 0x1326},
            new ushort[]{0x4223, 0x1326, 0x3304, 0x2315, 0x4113},
            new ushort[]{0x4113, 0x8337, 0x4223},
            new ushort[]{0x6201, 0x5102, 0x3304, 0x4223, 0x4113, 0x8337},
            new ushort[]{0x6201, 0x2315, 0x8337, 0x4223},
            new ushort[]{0x5102, 0x3304, 0x2315, 0x8337, 0x4223},
            new ushort[]{0x5102, 0x4113, 0x8337, 0x1326},
            new ushort[]{0x4113, 0x8337, 0x1326, 0x3304, 0x6201},
            new ushort[]{0x6201, 0x2315, 0x8337, 0x1326, 0x5102},
            new ushort[]{0x3304, 0x2315, 0x8337, 0x1326},
            new ushort[]{0x3304, 0x1146, 0x2245},
            new ushort[]{0x6201, 0x5102, 0x1146, 0x2245},
            new ushort[]{0x6201, 0x2315, 0x4113, 0x3304, 0x1146, 0x2245},
            new ushort[]{0x2315, 0x4113, 0x5102, 0x1146, 0x2245},
            new ushort[]{0x5102, 0x4223, 0x1326, 0x3304, 0x1146, 0x2245},
            new ushort[]{0x1146, 0x2245, 0x6201, 0x4223, 0x1326},
            new ushort[]{0x3304, 0x1146, 0x2245, 0x6201, 0x2315, 0x4113, 0x5102, 0x4223, 0x1326},
            new ushort[]{0x4223, 0x1326, 0x1146, 0x2245, 0x2315, 0x4113},
            new ushort[]{0x4223, 0x4113, 0x8337, 0x3304, 0x1146, 0x2245},
            new ushort[]{0x6201, 0x5102, 0x1146, 0x2245, 0x4223, 0x4113, 0x8337},
            new ushort[]{0x4223, 0x6201, 0x2315, 0x8337, 0x3304, 0x1146, 0x2245},
            new ushort[]{0x4223, 0x8337, 0x2315, 0x2245, 0x1146, 0x5102},
            new ushort[]{0x5102, 0x4113, 0x8337, 0x1326, 0x3304, 0x1146, 0x2245},
            new ushort[]{0x4113, 0x8337, 0x1326, 0x1146, 0x2245, 0x6201},
            new ushort[]{0x6201, 0x2315, 0x8337, 0x1326, 0x5102, 0x3304, 0x1146, 0x2245},
            new ushort[]{0x2245, 0x2315, 0x8337, 0x1326, 0x1146},
            new ushort[]{0x2315, 0x2245, 0x8157},
            new ushort[]{0x6201, 0x5102, 0x3304, 0x2315, 0x2245, 0x8157},
            new ushort[]{0x4113, 0x6201, 0x2245, 0x8157},
            new ushort[]{0x2245, 0x8157, 0x4113, 0x5102, 0x3304},
            new ushort[]{0x5102, 0x4223, 0x1326, 0x2315, 0x2245, 0x8157},
            new ushort[]{0x6201, 0x4223, 0x1326, 0x3304, 0x2315, 0x2245, 0x8157},
            new ushort[]{0x6201, 0x2245, 0x8157, 0x4113, 0x5102, 0x4223, 0x1326},
            new ushort[]{0x4223, 0x1326, 0x3304, 0x2245, 0x8157, 0x4113},
            new ushort[]{0x4223, 0x4113, 0x8337, 0x2315, 0x2245, 0x8157},
            new ushort[]{0x6201, 0x5102, 0x3304, 0x4223, 0x4113, 0x8337, 0x2315, 0x2245, 0x8157},
            new ushort[]{0x8337, 0x4223, 0x6201, 0x2245, 0x8157},
            new ushort[]{0x5102, 0x3304, 0x2245, 0x8157, 0x8337, 0x4223},
            new ushort[]{0x5102, 0x4113, 0x8337, 0x1326, 0x2315, 0x2245, 0x8157},
            new ushort[]{0x4113, 0x8337, 0x1326, 0x3304, 0x6201, 0x2315, 0x2245, 0x8157},
            new ushort[]{0x5102, 0x1326, 0x8337, 0x8157, 0x2245, 0x6201},
            new ushort[]{0x8157, 0x8337, 0x1326, 0x3304, 0x2245},
            new ushort[]{0x2315, 0x3304, 0x1146, 0x8157},
            new ushort[]{0x6201, 0x5102, 0x1146, 0x8157, 0x2315},
            new ushort[]{0x3304, 0x1146, 0x8157, 0x4113, 0x6201},
            new ushort[]{0x4113, 0x5102, 0x1146, 0x8157},
            new ushort[]{0x2315, 0x3304, 0x1146, 0x8157, 0x5102, 0x4223, 0x1326},
            new ushort[]{0x1326, 0x4223, 0x6201, 0x2315, 0x8157, 0x1146},
            new ushort[]{0x3304, 0x1146, 0x8157, 0x4113, 0x6201, 0x5102, 0x4223, 0x1326},
            new ushort[]{0x1326, 0x1146, 0x8157, 0x4113, 0x4223},
            new ushort[]{0x2315, 0x3304, 0x1146, 0x8157, 0x4223, 0x4113, 0x8337},
            new ushort[]{0x6201, 0x5102, 0x1146, 0x8157, 0x2315, 0x4223, 0x4113, 0x8337},
            new ushort[]{0x3304, 0x1146, 0x8157, 0x8337, 0x4223, 0x6201},
            new ushort[]{0x4223, 0x5102, 0x1146, 0x8157, 0x8337},
            new ushort[]{0x2315, 0x3304, 0x1146, 0x8157, 0x5102, 0x4113, 0x8337, 0x1326},
            new ushort[]{0x6201, 0x4113, 0x8337, 0x1326, 0x1146, 0x8157, 0x2315},
            new ushort[]{0x6201, 0x3304, 0x1146, 0x8157, 0x8337, 0x1326, 0x5102},
            new ushort[]{0x1326, 0x1146, 0x8157, 0x8337},
            new ushort[]{0x1326, 0x8267, 0x1146},
            new ushort[]{0x6201, 0x5102, 0x3304, 0x1326, 0x8267, 0x1146},
            new ushort[]{0x6201, 0x2315, 0x4113, 0x1326, 0x8267, 0x1146},
            new ushort[]{0x5102, 0x3304, 0x2315, 0x4113, 0x1326, 0x8267, 0x1146},
            new ushort[]{0x5102, 0x4223, 0x8267, 0x1146},
            new ushort[]{0x3304, 0x6201, 0x4223, 0x8267, 0x1146},
            new ushort[]{0x5102, 0x4223, 0x8267, 0x1146, 0x6201, 0x2315, 0x4113},
            new ushort[]{0x1146, 0x8267, 0x4223, 0x4113, 0x2315, 0x3304},
            new ushort[]{0x4113, 0x8337, 0x4223, 0x1326, 0x8267, 0x1146},
            new ushort[]{0x6201, 0x5102, 0x3304, 0x4223, 0x4113, 0x8337, 0x1326, 0x8267, 0x1146},
            new ushort[]{0x6201, 0x2315, 0x8337, 0x4223, 0x1326, 0x8267, 0x1146},
            new ushort[]{0x5102, 0x3304, 0x2315, 0x8337, 0x4223, 0x1326, 0x8267, 0x1146},
            new ushort[]{0x8267, 0x1146, 0x5102, 0x4113, 0x8337},
            new ushort[]{0x6201, 0x4113, 0x8337, 0x8267, 0x1146, 0x3304},
            new ushort[]{0x6201, 0x2315, 0x8337, 0x8267, 0x1146, 0x5102},
            new ushort[]{0x1146, 0x3304, 0x2315, 0x8337, 0x8267},
            new ushort[]{0x3304, 0x1326, 0x8267, 0x2245},
            new ushort[]{0x1326, 0x8267, 0x2245, 0x6201, 0x5102},
            new ushort[]{0x3304, 0x1326, 0x8267, 0x2245, 0x6201, 0x2315, 0x4113},
            new ushort[]{0x1326, 0x8267, 0x2245, 0x2315, 0x4113, 0x5102},
            new ushort[]{0x5102, 0x4223, 0x8267, 0x2245, 0x3304},
            new ushort[]{0x6201, 0x4223, 0x8267, 0x2245},
            new ushort[]{0x5102, 0x4223, 0x8267, 0x2245, 0x3304, 0x6201, 0x2315, 0x4113},
            new ushort[]{0x4113, 0x4223, 0x8267, 0x2245, 0x2315},
            new ushort[]{0x3304, 0x1326, 0x8267, 0x2245, 0x4223, 0x4113, 0x8337},
            new ushort[]{0x1326, 0x8267, 0x2245, 0x6201, 0x5102, 0x4223, 0x4113, 0x8337},
            new ushort[]{0x3304, 0x1326, 0x8267, 0x2245, 0x4223, 0x6201, 0x2315, 0x8337},
            new ushort[]{0x5102, 0x1326, 0x8267, 0x2245, 0x2315, 0x8337, 0x4223},
            new ushort[]{0x3304, 0x2245, 0x8267, 0x8337, 0x4113, 0x5102},
            new ushort[]{0x8337, 0x8267, 0x2245, 0x6201, 0x4113},
            new ushort[]{0x5102, 0x6201, 0x2315, 0x8337, 0x8267, 0x2245, 0x3304},
            new ushort[]{0x2315, 0x8337, 0x8267, 0x2245},
            new ushort[]{0x2315, 0x2245, 0x8157, 0x1326, 0x8267, 0x1146},
            new ushort[]{0x6201, 0x5102, 0x3304, 0x2315, 0x2245, 0x8157, 0x1326, 0x8267, 0x1146},
            new ushort[]{0x6201, 0x2245, 0x8157, 0x4113, 0x1326, 0x8267, 0x1146},
            new ushort[]{0x2245, 0x8157, 0x4113, 0x5102, 0x3304, 0x1326, 0x8267, 0x1146},
            new ushort[]{0x4223, 0x8267, 0x1146, 0x5102, 0x2315, 0x2245, 0x8157},
            new ushort[]{0x3304, 0x6201, 0x4223, 0x8267, 0x1146, 0x2315, 0x2245, 0x8157},
            new ushort[]{0x4223, 0x8267, 0x1146, 0x5102, 0x6201, 0x2245, 0x8157, 0x4113},
            new ushort[]{0x3304, 0x2245, 0x8157, 0x4113, 0x4223, 0x8267, 0x1146},
            new ushort[]{0x4223, 0x4113, 0x8337, 0x2315, 0x2245, 0x8157, 0x1326, 0x8267, 0x1146},
            new ushort[]{0x6201, 0x5102, 0x3304, 0x4223, 0x4113, 0x8337, 0x2315, 0x2245, 0x8157, 0x1326, 0x8267, 0x1146},
            new ushort[]{0x8337, 0x4223, 0x6201, 0x2245, 0x8157, 0x1326, 0x8267, 0x1146},
            new ushort[]{0x4223, 0x5102, 0x3304, 0x2245, 0x8157, 0x8337, 0x1326, 0x8267, 0x1146},
            new ushort[]{0x8267, 0x1146, 0x5102, 0x4113, 0x8337, 0x2315, 0x2245, 0x8157},
            new ushort[]{0x6201, 0x4113, 0x8337, 0x8267, 0x1146, 0x3304, 0x2315, 0x2245, 0x8157},
            new ushort[]{0x8337, 0x8267, 0x1146, 0x5102, 0x6201, 0x2245, 0x8157},
            new ushort[]{0x3304, 0x2245, 0x8157, 0x8337, 0x8267, 0x1146},
            new ushort[]{0x8157, 0x2315, 0x3304, 0x1326, 0x8267},
            new ushort[]{0x8267, 0x8157, 0x2315, 0x6201, 0x5102, 0x1326},
            new ushort[]{0x8267, 0x1326, 0x3304, 0x6201, 0x4113, 0x8157},
            new ushort[]{0x8267, 0x8157, 0x4113, 0x5102, 0x1326},
            new ushort[]{0x5102, 0x4223, 0x8267, 0x8157, 0x2315, 0x3304},
            new ushort[]{0x2315, 0x6201, 0x4223, 0x8267, 0x8157},
            new ushort[]{0x3304, 0x5102, 0x4223, 0x8267, 0x8157, 0x4113, 0x6201},
            new ushort[]{0x4113, 0x4223, 0x8267, 0x8157},
            new ushort[]{0x8157, 0x2315, 0x3304, 0x1326, 0x8267, 0x4223, 0x4113, 0x8337},
            new ushort[]{0x8157, 0x2315, 0x6201, 0x5102, 0x1326, 0x8267, 0x4223, 0x4113, 0x8337},
            new ushort[]{0x8157, 0x8337, 0x4223, 0x6201, 0x3304, 0x1326, 0x8267},
            new ushort[]{0x5102, 0x1326, 0x8267, 0x8157, 0x8337, 0x4223},
            new ushort[]{0x8267, 0x8157, 0x2315, 0x3304, 0x5102, 0x4113, 0x8337},
            new ushort[]{0x6201, 0x4113, 0x8337, 0x8267, 0x8157, 0x2315},
            new ushort[]{0x6201, 0x3304, 0x5102, 0x8337, 0x8267, 0x8157},
            new ushort[]{0x8337, 0x8267, 0x8157},
            new ushort[]{0x8337, 0x8157, 0x8267},
            new ushort[]{0x6201, 0x5102, 0x3304, 0x8337, 0x8157, 0x8267},
            new ushort[]{0x6201, 0x2315, 0x4113, 0x8337, 0x8157, 0x8267},
            new ushort[]{0x5102, 0x3304, 0x2315, 0x4113, 0x8337, 0x8157, 0x8267},
            new ushort[]{0x5102, 0x4223, 0x1326, 0x8337, 0x8157, 0x8267},
            new ushort[]{0x6201, 0x4223, 0x1326, 0x3304, 0x8337, 0x8157, 0x8267},
            new ushort[]{0x6201, 0x2315, 0x4113, 0x5102, 0x4223, 0x1326, 0x8337, 0x8157, 0x8267},
            new ushort[]{0x4223, 0x1326, 0x3304, 0x2315, 0x4113, 0x8337, 0x8157, 0x8267},
            new ushort[]{0x4113, 0x8157, 0x8267, 0x4223},
            new ushort[]{0x4223, 0x4113, 0x8157, 0x8267, 0x6201, 0x5102, 0x3304},
            new ushort[]{0x8157, 0x8267, 0x4223, 0x6201, 0x2315},
            new ushort[]{0x3304, 0x2315, 0x8157, 0x8267, 0x4223, 0x5102},
            new ushort[]{0x1326, 0x5102, 0x4113, 0x8157, 0x8267},
            new ushort[]{0x8157, 0x4113, 0x6201, 0x3304, 0x1326, 0x8267},
            new ushort[]{0x1326, 0x5102, 0x6201, 0x2315, 0x8157, 0x8267},
            new ushort[]{0x8267, 0x1326, 0x3304, 0x2315, 0x8157},
            new ushort[]{0x3304, 0x1146, 0x2245, 0x8337, 0x8157, 0x8267},
            new ushort[]{0x6201, 0x5102, 0x1146, 0x2245, 0x8337, 0x8157, 0x8267},
            new ushort[]{0x6201, 0x2315, 0x4113, 0x3304, 0x1146, 0x2245, 0x8337, 0x8157, 0x8267},
            new ushort[]{0x2315, 0x4113, 0x5102, 0x1146, 0x2245, 0x8337, 0x8157, 0x8267},
            new ushort[]{0x5102, 0x4223, 0x1326, 0x3304, 0x1146, 0x2245, 0x8337, 0x8157, 0x8267},
            new ushort[]{0x1146, 0x2245, 0x6201, 0x4223, 0x1326, 0x8337, 0x8157, 0x8267},
            new ushort[]{0x6201, 0x2315, 0x4113, 0x5102, 0x4223, 0x1326, 0x3304, 0x1146, 0x2245, 0x8337, 0x8157, 0x8267},
            new ushort[]{0x4113, 0x4223, 0x1326, 0x1146, 0x2245, 0x2315, 0x8337, 0x8157, 0x8267},
            new ushort[]{0x4223, 0x4113, 0x8157, 0x8267, 0x3304, 0x1146, 0x2245},
            new ushort[]{0x6201, 0x5102, 0x1146, 0x2245, 0x4223, 0x4113, 0x8157, 0x8267},
            new ushort[]{0x8157, 0x8267, 0x4223, 0x6201, 0x2315, 0x3304, 0x1146, 0x2245},
            new ushort[]{0x2315, 0x8157, 0x8267, 0x4223, 0x5102, 0x1146, 0x2245},
            new ushort[]{0x1326, 0x5102, 0x4113, 0x8157, 0x8267, 0x3304, 0x1146, 0x2245},
            new ushort[]{0x1326, 0x1146, 0x2245, 0x6201, 0x4113, 0x8157, 0x8267},
            new ushort[]{0x5102, 0x6201, 0x2315, 0x8157, 0x8267, 0x1326, 0x3304, 0x1146, 0x2245},
            new ushort[]{0x1326, 0x1146, 0x2245, 0x2315, 0x8157, 0x8267},
            new ushort[]{0x2315, 0x2245, 0x8267, 0x8337},
            new ushort[]{0x2315, 0x2245, 0x8267, 0x8337, 0x6201, 0x5102, 0x3304},
            new ushort[]{0x4113, 0x6201, 0x2245, 0x8267, 0x8337},
            new ushort[]{0x5102, 0x4113, 0x8337, 0x8267, 0x2245, 0x3304},
            new ushort[]{0x2315, 0x2245, 0x8267, 0x8337, 0x5102, 0x4223, 0x1326},
            new ushort[]{0x6201, 0x4223, 0x1326, 0x3304, 0x8337, 0x2315, 0x2245, 0x8267},
            new ushort[]{0x4113, 0x6201, 0x2245, 0x8267, 0x8337, 0x5102, 0x4223, 0x1326},
            new ushort[]{0x4113, 0x4223, 0x1326, 0x3304, 0x2245, 0x8267, 0x8337},
            new ushort[]{0x2315, 0x2245, 0x8267, 0x4223, 0x4113},
            new ushort[]{0x2315, 0x2245, 0x8267, 0x4223, 0x4113, 0x6201, 0x5102, 0x3304},
            new ushort[]{0x6201, 0x2245, 0x8267, 0x4223},
            new ushort[]{0x3304, 0x2245, 0x8267, 0x4223, 0x5102},
            new ushort[]{0x5102, 0x4113, 0x2315, 0x2245, 0x8267, 0x1326},
            new ushort[]{0x4113, 0x2315, 0x2245, 0x8267, 0x1326, 0x3304, 0x6201},
            new ushort[]{0x5102, 0x6201, 0x2245, 0x8267, 0x1326},
            new ushort[]{0x3304, 0x2245, 0x8267, 0x1326},
            new ushort[]{0x8267, 0x8337, 0x2315, 0x3304, 0x1146},
            new ushort[]{0x5102, 0x1146, 0x8267, 0x8337, 0x2315, 0x6201},
            new ushort[]{0x3304, 0x1146, 0x8267, 0x8337, 0x4113, 0x6201},
            new ushort[]{0x8337, 0x4113, 0x5102, 0x1146, 0x8267},
            new ushort[]{0x8267, 0x8337, 0x2315, 0x3304, 0x1146, 0x5102, 0x4223, 0x1326},
            new ushort[]{0x1146, 0x8267, 0x8337, 0x2315, 0x6201, 0x4223, 0x1326},
            new ushort[]{0x8267, 0x8337, 0x4113, 0x6201, 0x3304, 0x1146, 0x5102, 0x4223, 0x1326},
            new ushort[]{0x4113, 0x4223, 0x1326, 0x1146, 0x8267, 0x8337},
            new ushort[]{0x3304, 0x2315, 0x4113, 0x4223, 0x8267, 0x1146},
            new ushort[]{0x2315, 0x6201, 0x5102, 0x1146, 0x8267, 0x4223, 0x4113},
            new ushort[]{0x1146, 0x8267, 0x4223, 0x6201, 0x3304},
            new ushort[]{0x5102, 0x1146, 0x8267, 0x4223},
            new ushort[]{0x8267, 0x1326, 0x5102, 0x4113, 0x2315, 0x3304, 0x1146},
            new ushort[]{0x6201, 0x4113, 0x2315, 0x1326, 0x1146, 0x8267},
            new ushort[]{0x6201, 0x3304, 0x1146, 0x8267, 0x1326, 0x5102},
            new ushort[]{0x1326, 0x1146, 0x8267},
            new ushort[]{0x1326, 0x8337, 0x8157, 0x1146},
            new ushort[]{0x8337, 0x8157, 0x1146, 0x1326, 0x6201, 0x5102, 0x3304},
            new ushort[]{0x8337, 0x8157, 0x1146, 0x1326, 0x6201, 0x2315, 0x4113},
            new ushort[]{0x4113, 0x5102, 0x3304, 0x2315, 0x1326, 0x8337, 0x8157, 0x1146},
            new ushort[]{0x8337, 0x8157, 0x1146, 0x5102, 0x4223},
            new ushort[]{0x6201, 0x4223, 0x8337, 0x8157, 0x1146, 0x3304},
            new ushort[]{0x8337, 0x8157, 0x1146, 0x5102, 0x4223, 0x6201, 0x2315, 0x4113},
            new ushort[]{0x4223, 0x8337, 0x8157, 0x1146, 0x3304, 0x2315, 0x4113},
            new ushort[]{0x4223, 0x4113, 0x8157, 0x1146, 0x1326},
            new ushort[]{0x4223, 0x4113, 0x8157, 0x1146, 0x1326, 0x6201, 0x5102, 0x3304},
            new ushort[]{0x1146, 0x8157, 0x2315, 0x6201, 0x4223, 0x1326},
            new ushort[]{0x4223, 0x5102, 0x3304, 0x2315, 0x8157, 0x1146, 0x1326},
            new ushort[]{0x4113, 0x8157, 0x1146, 0x5102},
            new ushort[]{0x6201, 0x4113, 0x8157, 0x1146, 0x3304},
            new ushort[]{0x2315, 0x8157, 0x1146, 0x5102, 0x6201},
            new ushort[]{0x2315, 0x8157, 0x1146, 0x3304},
            new ushort[]{0x2245, 0x3304, 0x1326, 0x8337, 0x8157},
            new ushort[]{0x6201, 0x2245, 0x8157, 0x8337, 0x1326, 0x5102},
            new ushort[]{0x2245, 0x3304, 0x1326, 0x8337, 0x8157, 0x6201, 0x2315, 0x4113},
            new ushort[]{0x2245, 0x2315, 0x4113, 0x5102, 0x1326, 0x8337, 0x8157},
            new ushort[]{0x4223, 0x8337, 0x8157, 0x2245, 0x3304, 0x5102},
            new ushort[]{0x8157, 0x2245, 0x6201, 0x4223, 0x8337},
            new ushort[]{0x2245, 0x3304, 0x5102, 0x4223, 0x8337, 0x8157, 0x4113, 0x6201, 0x2315},
            new ushort[]{0x4223, 0x8337, 0x8157, 0x2245, 0x2315, 0x4113},
            new ushort[]{0x4113, 0x8157, 0x2245, 0x3304, 0x1326, 0x4223},
            new ushort[]{0x1326, 0x4223, 0x4113, 0x8157, 0x2245, 0x6201, 0x5102},
            new ushort[]{0x8157, 0x2245, 0x3304, 0x1326, 0x4223, 0x6201, 0x2315},
            new ushort[]{0x5102, 0x1326, 0x4223, 0x2315, 0x8157, 0x2245},
            new ushort[]{0x3304, 0x5102, 0x4113, 0x8157, 0x2245},
            new ushort[]{0x4113, 0x8157, 0x2245, 0x6201},
            new ushort[]{0x5102, 0x6201, 0x2315, 0x8157, 0x2245, 0x3304},
            new ushort[]{0x2315, 0x8157, 0x2245},
            new ushort[]{0x1146, 0x1326, 0x8337, 0x2315, 0x2245},
            new ushort[]{0x1146, 0x1326, 0x8337, 0x2315, 0x2245, 0x6201, 0x5102, 0x3304},
            new ushort[]{0x6201, 0x2245, 0x1146, 0x1326, 0x8337, 0x4113},
            new ushort[]{0x2245, 0x1146, 0x1326, 0x8337, 0x4113, 0x5102, 0x3304},
            new ushort[]{0x5102, 0x1146, 0x2245, 0x2315, 0x8337, 0x4223},
            new ushort[]{0x1146, 0x3304, 0x6201, 0x4223, 0x8337, 0x2315, 0x2245},
            new ushort[]{0x8337, 0x4113, 0x6201, 0x2245, 0x1146, 0x5102, 0x4223},
            new ushort[]{0x4223, 0x8337, 0x4113, 0x3304, 0x2245, 0x1146},
            new ushort[]{0x4113, 0x2315, 0x2245, 0x1146, 0x1326, 0x4223},
            new ushort[]{0x1146, 0x1326, 0x4223, 0x4113, 0x2315, 0x2245, 0x6201, 0x5102, 0x3304},
            new ushort[]{0x1326, 0x4223, 0x6201, 0x2245, 0x1146},
            new ushort[]{0x4223, 0x5102, 0x3304, 0x2245, 0x1146, 0x1326},
            new ushort[]{0x2245, 0x1146, 0x5102, 0x4113, 0x2315},
            new ushort[]{0x4113, 0x2315, 0x2245, 0x1146, 0x3304, 0x6201},
            new ushort[]{0x6201, 0x2245, 0x1146, 0x5102},
            new ushort[]{0x3304, 0x2245, 0x1146},
            new ushort[]{0x3304, 0x1326, 0x8337, 0x2315},
            new ushort[]{0x5102, 0x1326, 0x8337, 0x2315, 0x6201},
            new ushort[]{0x6201, 0x3304, 0x1326, 0x8337, 0x4113},
            new ushort[]{0x5102, 0x1326, 0x8337, 0x4113},
            new ushort[]{0x4223, 0x8337, 0x2315, 0x3304, 0x5102},
            new ushort[]{0x6201, 0x4223, 0x8337, 0x2315},
            new ushort[]{0x3304, 0x5102, 0x4223, 0x8337, 0x4113, 0x6201},
            new ushort[]{0x4113, 0x4223, 0x8337},
            new ushort[]{0x4113, 0x2315, 0x3304, 0x1326, 0x4223},
            new ushort[]{0x1326, 0x4223, 0x4113, 0x2315, 0x6201, 0x5102},
            new ushort[]{0x3304, 0x1326, 0x4223, 0x6201},
            new ushort[]{0x5102, 0x1326, 0x4223},
            new ushort[]{0x5102, 0x4113, 0x2315, 0x3304},
            new ushort[]{0x6201, 0x4113, 0x2315},
            new ushort[]{0x6201, 0x3304, 0x5102},
            new ushort[]{}
        };
    }
}